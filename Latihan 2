from abc import ABC, abstractmethod
import math

class Shape(ABC):
    @abstractmethod
    def area(self):
        pass
    
    @abstractmethod
    def perimeter(self):
        pass

class Rectangle(Shape):
    def __init__(self, length, width):
        self.length = length
        self.width = width
    
    def area(self):
        return self.length * self.width
    
    def perimeter(self):
        return 2 * (self.length + self.width)

class Triangle(Shape):
    def __init__(self, base, height, side1, side2, side3):
        self.base = base
        self.height = height
        self.side1 = side1
        self.side2 = side2
        self.side3 = side3
    
    def area(self):
        return 0.5 * self.base * self.height
    
    def perimeter(self):
        return self.side1 + self.side2 + self.side3

class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius
    
    def area(self):
        return math.pi * self.radius ** 2
    
    def perimeter(self):
        return 2 * math.pi * self.radius

# Fungsi untuk mencetak informasi bentuk geometri
def print_shape_info(shape):
    print("Luas:", shape.area())
    print("Keliling:", shape.perimeter())
    print()

# Membuat objek bentuk geometri dan menampilkannya
rectangle = Rectangle(4, 6)
triangle = Triangle(4, 3, 5, 6, 7)
circle = Circle(3)

print("Persegi Panjang:")
print_shape_info(rectangle)

print("Segitiga:")
print_shape_info(triangle)

print("Lingkaran:")
print_shape_info(circle)
